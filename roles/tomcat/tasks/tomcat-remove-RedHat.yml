- name: Remove key
  rpm_key: 
    state: absent
    key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8

- name: Remove epel repo.
  yum:
    name: epel-release-latest-8
    state: absent

- name: Stop and disable tomcat
  service:
    daemon_reload: yes
    name: tomcat
    state: stopped
    enabled: no
  when: ansible_service_mgr == "systemd"
  ignore_errors: yes

- name: Remove basic packages
  package:
    name: ['bash-completion','tree','htop','wget','unzip','curl','git']
    state: absent
  ignore_errors: yes

- name: Remove Java 8 CentOS
  yum:
    name: java-1.8.0-openjdk
    state: absent


- name: Remove "tomcat" user
  user:
    name: tomcat
    group: tomcat
    home: /usr/share/tomcat
    createhome: no
    system: yes
    state: absent

- name: Remove tomcat files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ tomcat_archive_dest }}"
    - /usr/share/tomcat
    - /etc/systemd/system/tomcat.service

# - name: Download Tomcat
#   get_url:
#     url: "{{ tomcat_archive_url }}"
#     dest: "{{ tomcat_archive_dest }}"

# - name: Create a tomcat directory
#   file:
#     path: /usr/share/tomcat
#     state: directory
#     owner: tomcat
#     group: tomcat

# - name: Extract tomcat archive
#   unarchive:
#     src: "{{ tomcat_archive_dest }}"
#     dest: /usr/share/tomcat
#     owner: tomcat
#     group: tomcat
#     remote_src: yes
#     extra_opts: "--strip-components=1"
#     creates: /usr/share/tomcat/bin

# - name: Copy tomcat service file
#   template:
#     src: templates/tomcat.service.j2
#     dest: /etc/systemd/system/tomcat.service
#   when: ansible_service_mgr == "systemd"

# - name: Start and enable tomcat
#   service:
#     daemon_reload: yes
#     name: tomcat
#     state: started
#     enabled: yes
#   when: ansible_service_mgr == "systemd"



# - name: Open tomcat port on the firewall
#   firewalld:
#     port: 8080/tcp
#     permanent: true
#     state: enabled
#     immediate: yes
#   when: ansible_service_mgr == "systemd"

# - name: Set UI access credentials
#   template:
#     src: tomcat-users.xml.j2
#     dest: /usr/share/tomcat/conf/tomcat-users.xml
#   notify: restart tomcat

# - name: Allow access to Manager and Host Manager apps from any IP
#   template:
#     src: context.xml.j2 
#     dest: "{{ item }}"
#   with_items:
#     - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
#     - /usr/share/tomcat/webapps/manager/META-INF/context.xml
#   notify: restart tomcat
